// problem 12
// ------------------------------------------------------
/*

The sequence of triangle numbers is generated by adding the natural numbers. 
So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.
What is the value of the first triangle number to have over five hundred divisors?

*/// ------------------------------------------------------

use std::time::Instant;


fn main() {
    let start = Instant::now();

    // -------------------------------

    let mut n = 1;
    let mut x = 0;

    let mut max_divisors = 0;

    loop {

        x += n;

        let mut divisors = 0;
        for i in 1..x+1 {
            if x % i == 0 {
                divisors += 1;
            }
        }

        if divisors >= max_divisors {
            max_divisors = divisors;
        }

        if divisors >= 100 {
            break;
        }

        n += 1;

        if n % 100 == 0 {
            println!("checked up to: {} numbers | max divisors: {}", n, max_divisors);
        }
    }

    println!("first triangle number with over 500 divisors: {}", x);

    // -------------------------------

    let duration = start.elapsed();
    println!("Execution time: {:?}", duration);
}
